---
- name: Generate and move keys
  block:
    - name: Generate ECIES shards
      delegate_to: localhost
      run_once: true
      shell: |
        cd {{ playbook_dir }}/keys
        ../hostbin/horcrux create-ecies-shards --shards {{ shares }}

    - name: Generate private keys
      become: false
      delegate_to: localhost
      shell: |
        cd {{ playbook_dir }}/keys
        ../hostbin/horcrux create-ed25519-shards --chain-id {{ chain_id }} --key-file ./priv_validator_key.json --threshold {{ threshold }} --shards {{ shares }}
      run_once: true

    - name: Find local key share
      delegate_to: localhost
      become: false
      stat:
        path: "{{ playbook_dir }}/keys/cosigner_{{ my_share}}/{{ chain_id }}_shard.json"
      register: has_share

    - name: Copy keys
      copy:
        src: "keys/cosigner_{{ my_share}}/{{ chain_id }}_shard.json"
        dest: "{{ horcrux_dir }}/{{ chain_id }}_shard.json"
        owner: "{{ horcrux_user }}"
        group: "{{ horcrux_user }}"
        mode: '0400'
      when: has_share.stat.isreg is defined and has_share.stat.isreg

    - name: Find local ecies key
      delegate_to: localhost
      become: false
      stat:
        path: "{{ playbook_dir }}/keys/cosigner_{{ my_share}}/ecies_keys.json"
      register: ecies_share

    - name: Copy ecies key
      copy:
        src: "keys/cosigner_{{ my_share}}/ecies_keys.json"
        dest: "{{ horcrux_dir }}/ecies_keys.json"
        owner: "{{ horcrux_user }}"
        group: "{{ horcrux_user }}"
        mode: '0400'
      when: ecies_share.stat.isreg is defined and ecies_share.stat.isreg

    - name: Find remote key share
      stat:
        path: "{{ horcrux_dir }}/share.json"
      register: share_moved

    - name: Delete local share
      become: false
      delegate_to: localhost
      file:
        path: "{{ playbook_dir }}/keys/private_share_{{ my_share }}.json"
        state: absent
      when: share_moved.stat.exists

    - name: Delete priv_validator_key.json
      become: false
      delegate_to: localhost
      file:
        path: "{{ playbook_dir }}/keys/priv_validator_key.json"
        state: absent
      run_once: true
      when: share_moved.stat.exists
